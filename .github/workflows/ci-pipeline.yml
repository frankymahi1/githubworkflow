
 # .github/workflows/python-app.yml

 name: Python application

 on:
    push:
      branches: [ main, github_test_branch,github_test_branch_v1 ]
    pull_request:
      branches: [ main, github_test_branch,github_test_branch_v1 ]
    workflow_dispatch:  # Allows manual triggering of the workflow

 jobs:
   test_data_generation:
     runs-on: ubuntu-latest

     steps:
     - name: Checkout repository
       uses: actions/checkout@v2

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'

     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt

   build:
     needs: test_data_generation
     runs-on: ubuntu-latest

     steps:
     - uses: actions/checkout@v2

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'

     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt

     - name: Set PYTHONPATH
       run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

     - name: Run tests
       env:
         PYTHONPATH: ${{ env.PYTHONPATH }}
       run: |
         pytest

   run_end_to_end_flows:
     ##if: github.event_name == 'workflow_dispatch'  # Only run if manually triggered
     runs-on: ubuntu-latest
     needs: build  # This line makes run_end_to_end_flows dependent on build
     strategy:
       matrix:
         job: [ sql_to_azure, nas_to_azure, s3_to_azure, cybase_to_azure, rest_api_to_azure ]

     steps:
     - uses: actions/checkout@v2

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'

     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt

     - name: Print GitHub Event Name
       run: |
        echo "GitHub Event Name: ${{ github.event_name }}"
     - name: Execute specific script
        echo "Running script for ${{ matrix.job }}"
       run: |
          if [ "${{ matrix.job }}" == "sql_to_azure" ]; then
            pytest test/data_registration.py
          elif [ "${{ matrix.job }}" == "nas_to_azure" ]; then
            pytest test/data_registration.py
          elif [ "${{ matrix.job }}" == "s3_to_azure" ]; then
            pytest test/data_registration.py
          elif [ "${{ matrix.job }}" == "schema_registration" ]; then
            pytest test/data_registration.py
          elif [ "${{ matrix.job }}" == "rest_api_to_azure" ]; then
            pytest test/data_registration.py
          fi

#     - name: Step 1 - Execute data Registration
#       run: python test/test_data_registration.py
#
#     - name: Step 2 - Execute schema Registration
#       run: python test/test_schema_registration.py
#     - name: Step 3 - Test calculator functionality
#       env:
#         PYTHONPATH: ./src
#       run: python test/test_calculator.py
   Reporting:
     runs-on: ubuntu-latest
     needs: run_end_to_end_flows
     steps:
     - uses: actions/checkout@v2

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'
   dataset_registation:
     runs-on: ubuntu-latest
     needs: run_end_to_end_flows
     steps:
     - uses: actions/checkout@v2

     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'
   cybase_to_azure:
     runs-on: ubuntu-latest
     needs: run_end_to_end_flows
     steps:
       - uses: actions/checkout@v2

       - name: Set up Python
         uses: actions/setup-python@v2
         with:
           python-version: '3.x'